package com.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class StudClassAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudClassAllPropertiesEquals(StudClass expected, StudClass actual) {
        assertStudClassAutoGeneratedPropertiesEquals(expected, actual);
        assertStudClassAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudClassAllUpdatablePropertiesEquals(StudClass expected, StudClass actual) {
        assertStudClassUpdatableFieldsEquals(expected, actual);
        assertStudClassUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudClassAutoGeneratedPropertiesEquals(StudClass expected, StudClass actual) {
        assertThat(expected)
            .as("Verify StudClass auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudClassUpdatableFieldsEquals(StudClass expected, StudClass actual) {
        assertThat(expected)
            .as("Verify StudClass relevant properties")
            .satisfies(e -> assertThat(e.getClassName()).as("check className").isEqualTo(actual.getClassName()))
            .satisfies(e -> assertThat(e.getSubject()).as("check subject").isEqualTo(actual.getSubject()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertStudClassUpdatableRelationshipsEquals(StudClass expected, StudClass actual) {
        assertThat(expected)
            .as("Verify StudClass relationships")
            .satisfies(e -> assertThat(e.getStudents()).as("check students").isEqualTo(actual.getStudents()));
    }
}
